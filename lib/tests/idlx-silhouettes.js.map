{
  "version": 3,
  "file": "idlx-silhouettes.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/idlx-silhouettes.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;AAAA,MAAA;;EAKA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAhB5B;;;EAkBA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,IAAF,CAAA,GAA4B,OAAA,CAAQ,OAAR,CAA5B,EAnBA;;;EAuBA,GAAG,CAAC,IAAJ,CAAS,oBAAT,EAA+B,QAAA,CAAE,CAAF,CAAA;AAC7B,QAAA;IAAA,mBAAA,GAAsB,CACpB,CAAC,qBAAD,EAAuB,iBAAvB,CADoB,EAEpB,CAAC,yBAAD,EAA2B,iBAA3B,CAFoB,EAGpB,CAAC,0BAAD,EAA4B,iBAA5B,CAHoB,EAIpB,CAAC,4BAAD,EAA8B,iBAA9B,CAJoB,EAKpB,CAAC,6BAAD,EAA+B,iBAA/B,CALoB,EAMpB,CAAC,eAAD,EAAiB,eAAjB,CANoB,EAOpB,CAAC,YAAD,EAAc,YAAd,CAPoB;IAStB,KAAA,qDAAA;MAAI,CAAE,KAAF,EAAS,OAAT;MACF,MAAA,GAAS,IAAI,CAAC,uBAAL,CAA6B,KAA7B,EAAT;;MAEA,CAAC,CAAC,EAAF,CAAK,MAAA,KAAU,OAAf;IAHF;WAIA,CAAC,CAAC,GAAF,CAAA;EAd6B,CAA/B;AAvBA",
  "sourcesContent": [
    "\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MOJIKURA-IDL/TESTS/SILHOUETTES'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nTAP                       = require 'tap'\n{ IDLX, }                 = require '../..'\n\n\n#-----------------------------------------------------------------------------------------------------------\nTAP.test \"(IDLX) silhouettes\", ( T ) ->\n  probes_and_matchers = [\n    [\"⿱⿰⿵𠘨䖝⿵𠘨䖝⿰⿵𠘨䖝⿵𠘨䖝\",\"ooo..o..oo..o..\"]\n    [\"⿱⿰⿵&#123;䖝⿵𠘨䖝⿰⿵𠘨䖝⿵𠘨䖝\",\"ooo..o..oo..o..\"]\n    [\"⿱⿰⿵&#x123;䖝⿵𠘨䖝⿰⿵𠘨䖝⿵𠘨䖝\",\"ooo..o..oo..o..\"]\n    [\"⿱⿰⿵&jzr#123;䖝⿵𠘨䖝⿰⿵𠘨䖝⿵𠘨䖝\",\"ooo..o..oo..o..\"]\n    [\"⿱⿰⿵&jzr#x123;䖝⿵𠘨䖝⿰⿵𠘨䖝⿵𠘨䖝\",\"ooo..o..oo..o..\"]\n    [\"鐓:(⿰金(⿱亠口子)夊)\",\"..(o.(o...).)\"]\n    [\"敦:⿰(⿱亠口子)夊\",\"..o(o...).\"]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    result = IDLX.silhouette_from_formula probe\n    # debug JSON.stringify [ probe, result, ]\n    T.ok result == matcher\n  T.end()\n\n\n\n\n"
  ]
}