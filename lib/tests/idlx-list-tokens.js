// Generated by CoffeeScript 1.12.4
(function() {
  var CND, IDL, IDLX, TAP, alert, badge, debug, echo, help, info, log, ref, rpr, urge, warn, whisper;

  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'MOJIKURA-IDL/tests';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  echo = CND.echo.bind(CND);

  TAP = require('tap');

  ref = require('../..'), IDL = ref.IDL, IDLX = ref.IDLX;

  TAP.test("(IDLX) solitaires", function(T) {
    var i, len, matcher, probe, probes_and_matchers, ref1, result;
    probes_and_matchers = [['↻', 'operator'], ['〓', 'proxy'], ['§', 'proxy'], ['⿰', 'operator'], ['⿻', 'operator'], ['◰', 'operator'], ['(', 'bracket'], ['x', 'component']];
    for (i = 0, len = probes_and_matchers.length; i < len; i++) {
      ref1 = probes_and_matchers[i], probe = ref1[0], matcher = ref1[1];
      result = IDLX.type_from_literal(probe);
      urge(CND.truth(CND.equals(result, matcher)), JSON.stringify([probe, result]));
      T.ok(CND.equals(result, matcher));
    }
    T.end();
    return null;
  });

}).call(this);

//# sourceMappingURL=idlx-list-tokens.js.map
